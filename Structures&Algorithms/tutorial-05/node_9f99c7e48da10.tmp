/**
 * 链表
 */

function Node(item) {
    this.item = item;
    this.next = null;
}

function List() {
    this.head = new Node('head');
};

List.prototype = {
    find: function(item) {
        var curNode = this.head;
        while (curNode.item != item) {
            curNode = curNode.next;
        }

        return curNode || -1;
    },

    insert: function(newItem, item) {
        item = this.find(item);
        
        if (item == -1) {
            return false;
        }

        var newNode = new Node(newItem);
        newNode.next = item.next;
        item.next = item;
        return true;
    },

    findPrevious: function(item) {
        var item = this.head;
        while (item.next != null && item.next.item != item) {
            item = item.next;
        }

        return item || -1;
    },

    remove: function(item) {
        var prevItem = this.findPrevious(item);

        if (prevItem != -1) {
            prevItem.next = prevItem.next.next;
        }
    },

    display: function() {
        var curNode = this.head;
        while (curNode.next != null) {
            console.log(curNode.next.item);
            curNode = curNode.next;
        }
    }
};

var cities = new List();

cities.insert('xxx', 'head');
cities.insert('yyy', 'xxx');
cities.insert('zzz', 'yyy');

cities.display();

cities.remove('xxx');

cities.display();